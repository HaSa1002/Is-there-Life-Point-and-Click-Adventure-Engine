-- Testroom for the purpose of testing with Lua
-- Register this as package to the global rooms table
scenes["lua_testscene"] = {}
-- Make access easier
local scene = scenes["lua_testscene"]

-- All needed objects are here with Position
-- {Objectstring, x (relativ bg 0,0), y, z (Layer), callback (String of functionname; nil if no callback wanted), actions to recieve (leave, if no callback)}
scene["objects"] = {
Tablet = {0, 0, 0,".\\textures\\test.png", {'u', 'l', 'h'}},
Change = {200, 100, 1, "r800,600", {'u', 'h'}},
--	{"bin5", 11, 100, 1, "bin"},
--	{"painting1", 50, 8, 1, "painting"},
--	{"fence", 55, 100, 2, "offensive"},
--	{"door51", 75, 80, 1, "area51"}
}

-- Create the Walkboxestable
-- The walkboxes: Format {Position.X, Position.Y, Length, Width, isActive}
scene["walkboxes"] = {
	{0, 10, 1000, 400, true},
	{200, 10, 1000, 400, true},
	{150, 300, 60, 200, true}
}

-- Create the Zoomlines
-- Format: {, Position.X, Position.Y, Position2.X, Position2.Y, zoomfactor, active}
scene["zoomlines"] = {
	{0, 0, 1000, 1000, 0.9, true}
}

-- You always need a room initalizer
function scene.init()
	-- body
end

-- You always need a room initalizer
function scene.enter()
	-- body
end

-- Write your callback functions below
function scene.objects.Change.onUse()
	changeScene "lua_testscene2"
end

function scene.objects.Change.onHover()
	setSubtitle(display("changeTo")..display("lua_testscene2"))
end

function scene.objects.Tablet.onUse()
	setSubtitle(display("tabletU"))
	changeScene("bedroom_old")
end

function scene.objects.Tablet.onLook()
	setSubtitle(display("tabletL"))
end

function scene.objects.Tablet.onHover()
	setSubtitle(display("tablet"))
end


-- At the end we return the room to have a nice access to it when wished
return scene