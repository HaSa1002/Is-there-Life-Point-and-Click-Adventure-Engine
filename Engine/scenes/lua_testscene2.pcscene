-- Testroom for the purpose of testing with Lua
-- Register this as package to the global rooms table
scenes["lua_testscene2"] = {}
-- Make access easier
local scene = scenes["lua_testscene2"]

scene["objects"] = {
	-- 	Name = {Position: x,y,z, Texturepath, actions(use | collect, look, hover)}
	Panel = {400, 389, 1, ".\\textures\\test2.png", {'u', 'l', 'h'}},
	OtherRoom = {0, 0, 1, "r100,900", {'u', 'h'}},
	-- TextDemo = {790, 500, 0, "tI am a text!", {'l', 'h'}}
}
-- Create the Walkboxestable
-- The walkboxes: Format {Position.X, Position.Y, Length, Width, isActive}
scene["walkboxes"] = {
	
}

-- Create the Zoomlines
-- Format: {, Position.X, Position.Y, Position2.X, Position2.Y, zoomfactor, active}
scene["zoomlines"] = {
}

-- You can do nice things with the onEnter Function
function scene.onEnter()
	setSubtitle(display("lua_testscene"))
	-- Well that's a poor example
end

-- The Callback Functions:
-- objects.ObjectName.action

function scene.objects.Panel.onUse()
	setSubtitle(display("PanelUse"))
end

function scene.objects.Panel.onLook()
	setSubtitle(display("PanelLook"))
end

function scene.objects.Panel.onHover()
	setSubtitle(display("PanelHover"))
	
end



function scene.objects.OtherRoom.onUse()
	changeScene "lua_testscene"
end

function scene.objects.OtherRoom.onHover()
	setSubtitle(display("changeTo")..display("lua_testscene"))
end


-- function scene.objects.TextDemo.onLook()
-- 	setSubtitle(display("TextDemoLook"))
-- end
-- 
-- function scene.objects.TextDemo.onHover()
-- 	setSubtitle(display("TextDemoHover"))
-- end


-- At the end we return the room to have a nice access to it when wished
return scene