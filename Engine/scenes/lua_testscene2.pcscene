-- Testroom for the purpose of testing with Lua
-- Register this as package to the global rooms table
scenes["lua_testscene2"] = {}
-- Make access easier
local scene = scenes["lua_testscene2"]

-- All needed objects are here with Position
-- {Objectstring, x (relativ bg 0,0), y, z (Layer), callback (String of functionname; nil if no callback wanted), actions to recieve (leave, if no callback)}
scene["objects"] = {
	{".\\textures\\test2.png", 0, 0, 0, "bin", {'u', 'l'}},
	{"r800,600", 200, 100, 1, "change", {'u', 'l'}},
--	{"bin5", 11, 100, 1, "bin"},
--	{"painting1", 50, 8, 1, "painting"},
--	{"fence", 55, 100, 2, "offensive"},
--	{"door51", 75, 80, 1, "area51"}
}

-- Create the Walkboxestable
-- The walkboxes: Format {Position.X, Position.Y, Length, Width, isActive}
scene["walkboxes"] = {
	{0, 10, 1000, 400, true},
	{200, 10, 1000, 400, true},
	{150, 300, 60, 200, true}
}

-- Create the Zoomlines
-- Format: {, Position.X, Position.Y, Position2.X, Position2.Y, zoomfactor, active}
scene["zoomlines"] = {
	{0, 0, 1000, 1000, 0.9, true}
}

-- You always need a room initalizer
function scene.init()
	-- body
end

-- You always need a room initalizer
function scene.enter()
	-- body
end

-- Write your callback functions below
function scene.change( action )
	-- do your stuff
	game.loadScene = "lua_testscene"
end

function scene.bin( action )
	-- do your stuff
	if action == 'u' then print(display("tabletU"))
	elseif action == 'l' then print(display("tabletL"))
	end
end

function scene.painting( action )
	-- do your stuff
end

function scene.offensive( action )
	-- do your stuff
end

function scene.area51( action )
	-- do your stuff
end


-- At the end we return the room to have a nice access to it when wished
return scene