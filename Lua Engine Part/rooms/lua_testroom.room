-- Testroom for the purpose of testing with Lua
-- Register this as package to the global rooms table
rooms["lua_testroom"] = {}
-- Make access easier
local room = rooms["lua_testroom"];

-- All needed objects are here with Position
-- {Objectstring, x (relativ bg 0,0), y, z (Layer), callback (String of functionname; nil if no callback wanted), actions to recieve (leave, if no callback)}
room["objects"] = {
	{"testBG", 0, 0, 0 },
	{"clock1", 22, 55, 1, "hello", {'c', 'l'}},
	{"bin5", 11, 100, 1, "bin"},
	{"painting1", 50, 8, 1, "painting"},
	{"fence", 55, 100, 2, "offensive"},
	{"door51", 75, 80, 1, "area51"}
}

-- Create the Walkboxestable
-- The walkboxes: Format {Position.X, Position.Y, Length, Width, isActive}
room["walkboxes"] = {
	{0, 10, 100, 50, true}
}

-- Create the Zoomlines
-- Format: {rotation (0Â° == ->), Position.X, Position.Y, zoomfactor}
room["zoomlines"] = {
	{0, 100, 100, 0.9}
}

-- You always need a room initalizer
function rooms.lua_testroom.init()
	-- body
end


-- Write your callback functions below
function room.hello( action )
	-- do your stuff
	print(display("test")); -- test
end

function room.bin( action )
	-- do your stuff
end

function room.painting( action )
	-- do your stuff
end

function room.offensive( action )
	-- do your stuff
end

function room.area51( action )
	-- do your stuff
end


-- At the end we return the room to have a nice access to it when wished
return room